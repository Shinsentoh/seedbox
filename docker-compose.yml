version: "3.7"

services:
    traefik:
        image: traefik
        container_name: traefik
        restart: always
        command:
            - "--certificatesresolvers.leresolver.acme.email=${ACME_MAIL}"
            - "--api.insecure"
            - "--pilot.token=${PILOT_TOKEN}"
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - traefikBehaviour:/etc/traefik:ro
            - configTraefik:/config
        environment:
            - TRAEFIK_DOMAIN=${TRAEFIK_DOMAIN}
            - TZ=${TZ}
        labels:
            - "traefik.enable=true"
            # Docker labels for enabling Traefik dashboard
            - "traefik.http.routers.traefik.rule=Host(`traefik.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.traefik.service=api@internal"
            - "traefik.http.routers.traefik.middlewares=common-auth@file"

    rutorrent:
        image: mondedie/rutorrent:latest
        container_name: rutorrent
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
            - DHT_RTORRENT=on
            - PORT_RTORRENT=6881
        volumes:
            - configRutorrent:/config
            - torrents:/data
        # ports:
        #     - 8080:8080
        #     - 6881:6881
        #     - 6881:6881/udp
        restart: unless-stopped
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.rutorrent.loadbalancer.server.port=8080"
            - "traefik.http.routers.rutorrent.rule=Host(`torrent.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.rutorrent.middlewares=common-auth@file"

    plex:
        image: linuxserver/plex
        container_name: plex
        restart: always
        ports:
            - "32400:32400"
            - "32400:32400/udp"
            - "32469:32469"
            - "32469:32469/udp"
            - "5353:5353/udp"
            - "1900:1900/udp"
        volumes:
            - configPlex:/config
            - media:/data
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
            - VERSION=docker
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.plex.loadbalancer.server.port=32400"
            - "traefik.http.routers.plex.rule=Host(`plex.${TRAEFIK_DOMAIN}`)"

    jackett:
        image: sclemenceau/docker-jackett:cloudproxy
        container_name: jackett
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
            - JACKETT_NO_UPDATES=1
        volumes:
            - configJackett:/config
            - /etc/localtime:/etc/localtime:ro
        restart: unless-stopped
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.jackett.loadbalancer.server.port=9117"
            - "traefik.http.routers.jackett.rule=Host(`jackett.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.jackett.middlewares=common-auth@file"

    cloudproxy:
        image: noahcardoza/cloudproxy
        container_name: cloudproxy
        restart: unless-stopped

    medusa:
        image: ghcr.io/linuxserver/medusa
        container_name: medusa
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
        volumes:
            - configMedusa:/config
            - alldata:/data
        # ports:
        #     - 8081:8081
        restart: unless-stopped
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.medusa.loadbalancer.server.port=8081"
            - "traefik.http.routers.medusa.rule=Host(`medusa.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.medusa.middlewares=common-auth@file"

    radarr:
        image: linuxserver/radarr:nightly
        container_name: radarr
        restart: always
        volumes:
            - configRadarr:/config
            - alldata:/data
            - /etc/localtime:/etc/localtime:ro
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.radarr.loadbalancer.server.port=7878"
            - "traefik.http.routers.radarr.rule=Host(`movie.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.radarr.middlewares=common-auth@file"

    # bazarr:
    #     image: linuxserver/bazarr
    #     container_name: bazarr
    #     restart: always
    #     volumes:
    #         - alldata:/data
    #         - configBazarr:/config
    #     environment:
    #         - PGID=${PGID}
    #         - PUID=${PUID}
    #         - TZ=${TZ}
    #     labels:
    #         - "traefik.enable=true"
    #         - "traefik.http.routers.bazarr.rule=Host(`bazarr.${TRAEFIK_DOMAIN}`)"
    #         - "traefik.http.routers.bazarr.middlewares=common-auth@file"

    lidarr:
        image: linuxserver/lidarr:preview
        container_name: lidarr
        restart: always
        volumes:
            - configLidarr:/config
            - alldata:/data
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.lidarr.loadbalancer.server.port=6767"
            - "traefik.http.routers.lidarr.rule=Host(`book.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.lidarr.middlewares=common-auth@file"

    # tautulli:
    #     image: linuxserver/tautulli
    #     container_name: tautulli
    #     restart: always
    #     volumes:
    #         - configTautulli:/config
    #         - config:/logs:ro # Inside of tautulli, bind to logs via "/logs/Plex Media Server/Logs"
    #     environment:
    #         - PGID=${PGID}
    #         - PUID=${PUID}
    #         - TZ=${TZ}
    #     labels:
    #         - "traefik.enable=true"
    #         - "traefik.http.routers.tautulli.rule=Host(`tautulli.${TRAEFIK_DOMAIN}`)"

    jdownloader:
        image: jlesage/jdownloader-2
        container_name: jdownloader
        restart: unless-stopped
        volumes:
            - configJdownloader:/config
            - media:/data
        environment:
            - USER_ID=${PUID}
            - GROUP_ID=${PGID}
            - TZ=${TZ}
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.jdownloader.loadbalancer.server.port=5800"
            - "traefik.http.routers.jdownloader.rule=Host(`jdownloader.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.jdownloader.middlewares=common-auth@file"

    nextcloud-db:
        image: mariadb:10
        container_name: nextcloud-db
        command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
        restart: always
        environment:
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - TZ=${TZ}
        volumes:
            - nextcloudDb:/var/lib/mysql
        labels:
            - "traefik.enable=false"

    # See init-setup-nextcloud.sh for first install
    nextcloud:
        depends_on:
            - nextcloud-db
        image: linuxserver/nextcloud
        container_name: nextcloud
        restart: always
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
        volumes:
            - configNextcloud:/config
            - nextcloudData:/data
            - media:/media
            - config:/seedbox-config
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.nextcloud.rule=Host(`cloud.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.services.nextcloud.loadbalancer.server.scheme=https"
            - "traefik.http.services.nextcloud.loadbalancer.server.port=443"

    portainer:
        image: portainer/portainer
        container_name: portainer
        restart: always
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        command: --admin-password ${PORTAINER_ADMIN_PASSWORD} --host=unix:///var/run/docker.sock
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.portainer.rule=Host(`portainer.${TRAEFIK_DOMAIN}`)"

    netdata:
        image: netdata/netdata
        restart: always
        container_name: netdata
        hostname: netdata.${TRAEFIK_DOMAIN}
        environment:
            PGID: 999
        cap_add:
            - SYS_PTRACE
        security_opt:
            - apparmor:unconfined
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /var/run/docker.sock:/var/run/docker.sock:rw
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.netdata.rule=Host(`netdata.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.netdata.middlewares=common-auth@file"
            - "traefik.http.services.netdata.loadbalancer.server.port=19999"


    duplicati:
        image: linuxserver/duplicati
        container_name: duplicati
        restart: unless-stopped
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
        volumes:
            - configDuplicati:/config
            - backups:/backups
            - alldata:/source
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.duplicati.rule=Host(`backup.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.duplicati.middlewares=common-auth@file"
            - "traefik.http.services.duplicati.loadbalancer.server.port=8200"

    webconsole:
        image: cdue/webconsole
        container_name: webconsole
        restart: unless-stopped
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
        volumes:
            - alldata:/mounted_directory
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.webconsole.rule=Host(`shell.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.webconsole.middlewares=common-auth@file"
            - "traefik.http.services.webconsole.loadbalancer.server.port=80"

networks:
  default:
    external:
      name: "traefik-network"

volumes:
    alldata:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}
    config:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/config
    traefikBehaviour:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/config/traefik/behaviour
    configTraefik:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/config/traefik
    configPlex:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/config/plex
    configRutorrent:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/config/rutorrent
    configMedusa:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/config/medusa
    configRadarr:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/config/radarr
    configBazarr:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/config/bazarr
    configJackett:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/config/jackett
    configLidarr:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/config/lidarr
    configDeluge:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/config/deluge
    configTautulli:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/config/tautulli
    configJdownloader:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/config/jdownloader
    nextcloudDb:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/config/nextcloud-db
    configNextcloud:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/config/nextcloud
    nextcloudData:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/config/nextcloud-data
    torrents:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/torrents/
    media:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/media
    configDuplicati:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/config/duplicati
    backups:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/backups

version: "3.7"

services:
#region Containers
    #region NetWork
    traefik:
        image: traefik
        container_name: traefik
        restart: always
        command:
            - "--certificatesresolvers.leresolver.acme.email=${ACME_MAIL}"
            - "--pilot.token=${PILOT_TOKEN}"
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - traefikBehaviour:/etc/traefik:ro
            - configTraefik:/config
        environment:
            - TRAEFIK_DOMAIN=${TRAEFIK_DOMAIN}
            - TZ=${TZ}
        labels:
            - "traefik.enable=true"
            # Docker labels for enabling Traefik dashboard
            - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_SUB_DOMAIN}.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.traefik.service=api@internal"
            - "traefik.http.routers.traefik.middlewares=common-auth@file"
            - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    #endregion

    #region Streaming/Reader
    plex:
        image: linuxserver/plex
        container_name: plex
        restart: always
        volumes:
            - configPlex:/config
            - media:/data
            - torrents:/downloads
            - /tmp:/tmp
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
            - VERSION=docker
            - PLEX_CLAIM=claim-vy7qccuF8phpRK6XV9Ft
            - ADVERTISE_IP=${PLEX_SUB_DOMAIN}.${TRAEFIK_DOMAIN}:443
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.plex.loadbalancer.server.port=32400"
            - "traefik.http.routers.plex.rule=Host(`${PLEX_SUB_DOMAIN}.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.plex.service=plex"

    ubooquity:
        image: ghcr.io/linuxserver/ubooquity
        container_name: ubooquity
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
            - MAXMEM=2048
        volumes:
            - configUbooquity:/config
            - books:/books
            - comics:/comics
        restart: unless-stopped
        labels:
            - "traefik.enable=true"
            # router reader - Web UI
            - "traefik.http.services.reader.loadbalancer.server.port=2202"
            - "traefik.http.routers.reader.rule=Host(`${UBOOQUITY_READER_SUB_DOMAIN}.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.reader.service=reader"
            - "traefik.http.routers.reader.middlewares=common-auth@file, readerToAdmin"
            - "traefik.http.middlewares.readerToAdmin.redirectregex.regex=^https?://${UBOOQUITY_READER_SUB_DOMAIN}.${TRAEFIK_DOMAIN}/admin[/]?$$"
            - "traefik.http.middlewares.readerToAdmin.redirectregex.replacement=https://${UBOOQUITY_ADMIN_SUB_DOMAIN}.${TRAEFIK_DOMAIN}/admin"
            # router ubooquity - Admin UI
            - "traefik.http.services.ubooquity.loadbalancer.server.port=2203"
            - "traefik.http.routers.ubooquity.rule=Host(`${UBOOQUITY_ADMIN_SUB_DOMAIN}.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.ubooquity.service=ubooquity"
            - "traefik.http.routers.ubooquity.middlewares=common-auth@file, redirectToAdmin"
            - "traefik.http.middlewares.redirectToAdmin.redirectregex.regex=^https?://${UBOOQUITY_ADMIN_SUB_DOMAIN}.${TRAEFIK_DOMAIN}[/]?$$"
            - "traefik.http.middlewares.redirectToAdmin.redirectregex.replacement=https://${UBOOQUITY_ADMIN_SUB_DOMAIN}.${TRAEFIK_DOMAIN}/admin"

    ombi:
        image: ghcr.io/linuxserver/ombi:v4.0.731-ls20
        container_name: ombi
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
        volumes:
            - configOmbi:/config
        restart: unless-stopped
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.ombi.rule=Host(`${OMBI_SUB_DOMAIN}.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.ombi.service=ombi"
            - "traefik.http.services.ombi.loadbalancer.server.port=3579"
    #endregion

    #region Downloader
    rutorrent:
        image: mondedie/rutorrent:latest
        container_name: rutorrent
        environment:
            - GID=${PGID}
            - UID=${PUID}
            - TZ=${TZ}
            - DHT_RTORRENT=on
            - PORT_RTORRENT=6881
            - CHECK_PERM_DATA=false
        volumes:
            - configRutorrent:/config
            - alldata:/data
        restart: unless-stopped
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.rutorrent.loadbalancer.server.port=8080"
            - "traefik.http.routers.rutorrent.rule=Host(`${RUTORRENT_SUB_DOMAIN}.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.rutorrent.middlewares=common-auth@file"
            - "traefik.http.routers.rutorrent.service=rutorrent"

    jdownloader:
        image: jlesage/jdownloader-2
        container_name: jdownloader
        restart: unless-stopped
        volumes:
            - configJdownloader:/config
            - media:/data
        environment:
            - USER_ID=${PUID}
            - GROUP_ID=${PGID}
            - TZ=${TZ}
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.jdownloader.loadbalancer.server.port=5800"
            - "traefik.http.routers.jdownloader.rule=Host(`${JDOWNLOADER_SUB_DOMAIN}.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.jdownloader.middlewares=common-auth@file"
            - "traefik.http.routers.jdownloader.service=jdownloader"
    #endregion Downloader

    #region Media monitors
    flaresolverr:
        image: ghcr.io/flaresolverr/flaresolverr
        container_name: flaresolverr
        environment:
            - CAPTCHA_SOLVER=hcaptcha-solver
        restart: unless-stopped

    jackett:
        image: ghcr.io/linuxserver/jackett
        container_name: jackett
        depends_on:
            - flaresolverr
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
            - AUTO_UPDATE=false
            - RUN_OPTS='-FlareSolverrURL="http://flaresolverr:8191"'
        volumes:
            - configJackett:/config
            - /etc/localtime:/etc/localtime:ro
        restart: unless-stopped
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.jackett.loadbalancer.server.port=9117"
            - "traefik.http.routers.jackett.rule=Host(`${JACKETT_SUB_DOMAIN}.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.jackett.middlewares=common-auth@file"
            - "traefik.http.routers.jackett.service=jackett"

    medusa:
        image: ghcr.io/linuxserver/medusa
        container_name: medusa
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
        volumes:
            - configMedusa:/config
            - alldata:/data
        restart: unless-stopped
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.medusa.loadbalancer.server.port=8081"
            - "traefik.http.routers.medusa.rule=Host(`${MEDUSA_SUB_DOMAIN}.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.medusa.middlewares=common-auth@file"
            - "traefik.http.routers.medusa.service=medusa"

    radarr:
        image: linuxserver/radarr
        container_name: radarr
        restart: always
        volumes:
            - configRadarr:/config
            - alldata:/data
            - /etc/localtime:/etc/localtime:ro
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.radarr.loadbalancer.server.port=7878"
            - "traefik.http.routers.radarr.rule=Host(`${RADARR_SUB_DOMAIN}.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.radarr.middlewares=common-auth@file"
            - "traefik.http.routers.radarr.service=radarr"

    #region Folks
    medusa-folks:
        image: ghcr.io/linuxserver/medusa
        container_name: medusa-folks
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
        volumes:
            - configFolksMedusa:/config
            - alldata:/data
        restart: unless-stopped
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.medusa-folks.loadbalancer.server.port=8081"
            - "traefik.http.routers.medusa-folks.rule=Host(`${FOLKS_MEDUSA_SUB_DOMAIN}.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.medusa-folks.middlewares=common-auth@file"
            - "traefik.http.routers.medusa-folks.service=medusa-folks"

    lidarr:
        image: linuxserver/lidarr
        container_name: lidarr
        restart: always
        volumes:
            - configLidarr:/config
            - alldata:/data
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.lidarr.loadbalancer.server.port=8686"
            - "traefik.http.routers.lidarr.rule=Host(`${LIDARR_SUB_DOMAIN}.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.lidarr.middlewares=common-auth@file"
            - "traefik.http.routers.lidarr.service=lidarr"

    mylar:
        image: ghcr.io/linuxserver/mylar3
        container_name: mylar
        volumes:
            - configMylar:/config
            - comics:/comics
            - torrents:/downloads
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
        restart: unless-stopped
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.mylar.loadbalancer.server.port=8090"
            - "traefik.http.routers.mylar.rule=Host(`${MYLAR_SUB_DOMAIN}.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.mylar.middlewares=common-auth@file"
            - "traefik.http.routers.mylar.service=mylar"
    #endregion Folks

    #endregion Media monitors

    #region Cloud
    nextcloud-db:
        image: linuxserver/mariadb
        container_name: nextcloud-db
        restart: always
        environment:
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
        volumes:
            - nextcloudDb:/config
        labels:
            - "traefik.enable=false"

    # See init-setup-nextcloud.sh for first install
    nextcloud:
        depends_on:
            - nextcloud-db
        image: linuxserver/nextcloud
        container_name: nextcloud
        restart: always
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
        volumes:
            - configNextcloud:/config
            - nextcloudData:/data
            - alldata:/seedbox:ro
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.nextcloud.loadbalancer.server.scheme=https"
            - "traefik.http.services.nextcloud.loadbalancer.server.port=443"
            - "traefik.http.routers.nextcloud.rule=Host(`${NEXTCLOUD_SUB_DOMAIN}.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.nextcloud.service=nextcloud"
    #endregion Cloud

    #region Administration
    portainer:
        image: portainer/portainer-ce:latest
        container_name: portainer
        restart: always
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /etc/timezone:/etc/timezone:ro
            - /var/run/docker.sock:/var/run/docker.sock
            - configPortainer:/data
        # command: --host=unix:///var/run/docker.sock
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.portainer.rule=Host(`${PORTAINER_SUB_DOMAIN}.${TRAEFIK_DOMAIN}`)"
            # - "traefik.http.routers.portainer.middlewares=common-auth@file"
            - "traefik.http.routers.portainer.service=portainer"
            - "traefik.http.services.portainer.loadbalancer.server.port=9000"

    netdata:
        image: netdata/netdata
        container_name: netdata
        restart: unless-stopped
        hostname: ${NETDATA_SUB_DOMAIN}.${TRAEFIK_DOMAIN}
        cap_add:
            - SYS_PTRACE
        security_opt:
            - apparmor:unconfined
        environment:
            - PGID=${NETDATA_DOCKER_PGID}
        volumes:
            - /etc/passwd:/host/etc/passwd:ro
            - /etc/group:/host/etc/group:ro
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /etc/os-release:/host/etc/os-release:ro
            - /var/run/docker.sock:/var/run/docker.sock:ro
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.netdata.loadbalancer.server.port=19999"
            - "traefik.http.routers.netdata.rule=Host(`${NETDATA_SUB_DOMAIN}.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.netdata.middlewares=common-auth@file"
            - "traefik.http.routers.netdata.service=netdata"

    duplicati:
        image: linuxserver/duplicati
        container_name: duplicati
        restart: unless-stopped
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
        volumes:
            - configDuplicati:/config
            - backups:/backups
            - alldata:/source
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.duplicati.loadbalancer.server.port=8200"
            - "traefik.http.routers.duplicati.rule=Host(`${DUPLICATI_SUB_DOMAIN}.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.duplicati.middlewares=common-auth@file"
            - "traefik.http.routers.duplicati.service=duplicati"

    shellinabox:
        image: sspreitzer/shellinabox:latest
        container_name: shellinabox
        restart: unless-stopped
        environment:
            - SIAB_USER=${MEDIA_USER}
            - SIAB_PASSWORD=${SIAB_PASSWORD}
            - SIAB_GROUP=${MEDIA_USER}
            - SIAB_HOME=/home/${MEDIA_USER}
            - SIAB_USERID=${PUID}
            - SIAB_GROUPID=${PGID}
            - SIAB_SUDO=true
            - SIAB_SSL=false
            - SIAB_PKGS=${SIAB_PKGS}
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.shellinabox.loadbalancer.server.port=4200"
            - "traefik.http.routers.shellinabox.rule=Host(`${SHELLINABOX_SUB_DOMAIN}.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.shellinabox.middlewares=common-auth@file"
            - "traefik.http.routers.shellinabox.service=shellinabox"

    organizr:
        image: organizr/organizr
        container_name: organizr
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - fpm=true
        restart: unless-stopped
        volumes:
            - configOrganizr:/config
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.organizr.loadbalancer.server.port=80"
            - "traefik.http.routers.organizr.rule=Host(`${ORGANIZR_SUB_DOMAIN}.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.organizr.middlewares=common-auth@file"
            - "traefik.http.routers.organizr.service=organizr"

    sftp:
        image: netresearch/sftp
        container_name: sftp
        volumes:
            - alldata:/home/${FTP_USER}/upload
            - configSftp/:/etc/ssh/
        ports:
            - "${FTP_PORT}:22"
        restart: unless-stopped
        command: "${FTP_USER}:${FTP_PASSWORD}:${PUID}:${PGID}"

    openvpn:
        image: ghcr.io/linuxserver/openvpn-as
        container_name: openvpn
        cap_add:
            - NET_ADMIN
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
        volumes:
            - configOpenVPN:/config
        restart: unless-stopped
        ports:
            - 9443:9443
            - 1194:1194/udp
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.openvpn-http.rule=Host(`${OPENVPN_SUB_DOMAIN}.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.openvpn-http.middlewares=common-auth@file"
            - "traefik.http.routers.openvpn-http.service=openvpn-http"
            - "traefik.http.services.openvpn-http.loadbalancer.server.port=943"
            - "traefik.http.services.openvpn-http.loadbalancer.server.scheme=https"

    tautulli:
        image: linuxserver/tautulli
        container_name: tautulli
        restart: unless-stopped
        volumes:
            - configTautulli:/config
            - configPlexLogs:/logs:ro # Inside of tautulli, bind to logs via "/logs/Plex Media Server/Logs"
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.tautulli.loadbalancer.server.port=8181"
            - "traefik.http.routers.tautulli.rule=Host(`${TAUTULLI_SUB_DOMAIN}.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.tautulli.service=tautulli"


    doublecommander:
        image: ghcr.io/linuxserver/doublecommander
        container_name: doublecommander
        restart: unless-stopped
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
        volumes:
            - configDoubleCommander:/config
            - alldata:/data
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.doublecommander.loadbalancer.server.port=3000"
            - "traefik.http.routers.doublecommander.rule=Host(`file.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.doublecommander.middlewares=common-auth@file"
            - "traefik.http.routers.doublecommander.service=doublecommander"

    #endregion Administration

    #region Games
    valheim:
        image: mbround18/valheim:latest
        ports:
            - 2456:2456/udp
            - 2457:2457/udp
            - 2458:2458/udp
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
            - "NAME=${VALHEIM_SV_NAME}"
            - "WORLD=Dedicated"
            - PORT=2456
            - PUBLIC=1
            - "PASSWORD=${VALHEIM_SV_PWD}"
            - AUTO_UPDATE=0
        volumes:
            - valheimSaves:/home/steam/.config/unity3d/IronGate/Valheim
            - valheimServer:/home/steam/valheim
    #enregion Games
#endregion Containers

#region Networks
networks:
  default:
    external:
      name: "traefik-network"
#endregion Networks

#region Volumes
volumes:
    alldata:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}
    config:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}
    #region Volumes Config
    traefikBehaviour:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/traefik/behaviour
    configTraefik:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/traefik
    configPlex:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/plex
    configPlexLogs:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/plex/Library/Application\ Support/Plex\ Media\ Server/Logs/
    configRutorrent:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/rutorrent
    configMedusa:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/medusa
    configFolksMedusa:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/folks/medusa
    configRadarr:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/radarr
    # configFolksRadarr:
    #     driver: local-persist
    #     driver_opts:
    #         mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/folks/radarr
    configJackett:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/jackett
    configLidarr:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/folks/lidarr
    configMylar:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/folks/mylarr
    configTautulli:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/tautulli
    configJdownloader:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/jdownloader
    nextcloudDb:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/nextcloud-db
    configNextcloud:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/nextcloud
    nextcloudData:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/nextcloud-data
    configPortainer:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/portainer
    configOrganizr:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/organizr
    configOpenVPN:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/openVPN
    configSftp:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/sftp
    configDuplicati:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/duplicati
    configUbooquity:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/folks/ubooquity
    configOmbi:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/ombi
    configDoubleCommander:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/doubleCommander
    #endregion Config
    backups:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${BACKUP_DIR_NAME}
    torrents:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${TORRENT_DIR_NAME}
    #region Volumes Media
    media:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${MEDIA_DIR_NAME}
    musics:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${MEDIA_DIR_NAME}/musics
    movies:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${MEDIA_DIR_NAME}/movies
    comics:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${MEDIA_DIR_NAME}/books/comics
    books:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${MEDIA_DIR_NAME}/books
    #endregion Media

    #region games
    valheimSaves:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/valheim/saves/
    valheimServer:
        driver: local-persist
        driver_opts:
            mountpoint: ${BASE_PATH}/${CONFIG_DIR_NAME}/valheim/server/
    #enregion games
#endregion Volumes